---
// src/components/sections/EmendasParticipativas.astro
---

<section id="emendas-participativas">
  <div class="conteudo-centralizado">
    <div class="emendas-inner">
      <!-- <h2 class="emendas-titulo">Emendas Participativas</h2> -->
      <div class="carrossel-container">
        <div class="carrossel">
          <div class="slide ativo">
            <img src="/images/emendas/emenda-1.jpg" alt="Emenda Participativa 1" class="imagem-carrossel">
          </div>
          <div class="slide">
            <img src="/images/emendas/emenda-2.jpg" alt="Emenda Participativa 2" class="imagem-carrossel">
          </div>
          <div class="slide">
            <img src="/images/emendas/emenda-3.jpg" alt="Emenda Participativa 3" class="imagem-carrossel">
          </div>
          <div class="slide">
            <img src="/images/emendas/emenda-4.jpg" alt="Emenda Participativa 4" class="imagem-carrossel">
          </div>
          <div class="slide">
            <img src="/images/emendas/emenda-5.jpg" alt="Emenda Participativa 5" class="imagem-carrossel">
          </div>
          <div class="slide">
            <img src="/images/emendas/emenda-6.jpg" alt="Emenda Participativa 6" class="imagem-carrossel">
          </div>
        </div>
        <button class="carrossel-btn anterior" aria-label="Foto anterior">❮</button>
        <button class="carrossel-btn proximo" aria-label="Próxima foto">❯</button>
      </div>
    </div>
  </div>
</section>

<style>
  #emendas-participativas {
  background-color: #3375cd;
  color: white;
  padding: 60px 0;
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

.conteudo-centralizado {
  max-width: 830px;
  margin: 0 auto;
  padding: 0 20px;
}

.emendas-inner {
  width: 100%;
  max-width: 830px;
  margin: 0 auto;
}

.carrossel-container {
  position: relative;
  width: 100%;
  height: 600px;
  overflow: hidden;
  text-align: center;
  background: transparent;
}

.carrossel {
  display: flex;
  width: 100%;
  height: 100%;
  transition: transform 0.8s ease-in-out;
}

.slide {
  flex: 0 0 100%;
  width: 100%;
  height: 100%;
}

.imagem-carrossel {
  width: 100%;
  height: 100%;
  object-fit: contain;
  display: block;
  margin: 0 auto;
}

/* Botões desktop */
.carrossel-btn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0,0,0,0.5);
  color: white;
  border: none;
  padding: 12px 16px;
  cursor: pointer;
  border-radius: 50%;
  font-size: 18px;
  z-index: 10;
  transition: all 0.3s;
}
.carrossel-btn:hover {
  background-color: rgba(0,0,0,0.8);
  transform: translateY(-50%) scale(1.1);
}
.anterior { left: 20px; }
.proximo { right: 20px; }

/* Mobile */
@media (max-width: 768px) {
  .carrossel-container { height: 500px; }
  .carrossel-btn { display: none; }
}

@media (max-width: 480px) {
  .carrossel-container { height: 420px; }
}
</style>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const carrossel = document.querySelector('#emendas-participativas .carrossel');
  const slides = carrossel.querySelectorAll('.slide');
  const btnAnterior = document.querySelector('.anterior');
  const btnProximo = document.querySelector('.proximo');
  let current = 0;
  let startX = 0;
  let isDragging = false;

  function updateSlidePosition() {
    carrossel.style.transform = `translateX(-${current * 100}%)`;
  }

  function nextSlide() {
    current = (current + 1) % slides.length;
    updateSlidePosition();
  }

  function prevSlide() {
    current = (current - 1 + slides.length) % slides.length;
    updateSlidePosition();
  }

  if (btnProximo && btnAnterior) {
    btnProximo.addEventListener('click', nextSlide);
    btnAnterior.addEventListener('click', prevSlide);
  }

  // Troca automática a cada 5s
  let interval = setInterval(nextSlide, 5000);

  carrossel.addEventListener('mouseenter', () => clearInterval(interval));
  carrossel.addEventListener('mouseleave', () => {
    interval = setInterval(nextSlide, 5000);
  });

  // --- Suporte ao arrastar no mobile ---
  carrossel.addEventListener('touchstart', (e) => {
    startX = e.touches[0].clientX;
    isDragging = true;
    clearInterval(interval);
  });

  carrossel.addEventListener('touchmove', (e) => {
    if (!isDragging) return;
    const deltaX = e.touches[0].clientX - startX;
    carrossel.style.transform = `translateX(calc(-${current * 100}% + ${deltaX}px))`;
  });

  carrossel.addEventListener('touchend', (e) => {
    isDragging = false;
    const endX = e.changedTouches[0].clientX;
    const deltaX = endX - startX;
    if (Math.abs(deltaX) > 50) {
      if (deltaX < 0) nextSlide();
      else prevSlide();
    } else {
      updateSlidePosition();
    }
    interval = setInterval(nextSlide, 5000);
  });
});
</script>
